{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://raw.githubusercontent.com/OPEN-NEXT/OKH-LOSH/master/okh-losh.schema.json",
  "title": "Manifest",
  "description": "This is a JSON schema, which can validate a 'okh.toml' file, which holds a projects Open Know-How (Open Source Hardware) meta-data.",
  "$comment": "NOTE: The properies 'ui-hidden' and 'ui-recommended' used in this schema, are non-standardised, and currently unused. They could be used to create a form, and are here for consistency with <https://git.iostud.io/makernet/iop-cdb/-/blob/dev/server/assets/okh.okhdf>.",
  "type": "object",
  "properties": {
    "okhv": {
      "description": "The version of the standard this manifest follows",
      "type": "string",
      "const": "OKH-LOSHv1.0",
      "ui-hidden": true
    },
    "name": {
      "$ref": "#/$defs/name"
    },
    "repo": {
      "description": "URL to the repository in which the technical documentation is developed",
      "$ref": "#/$defs/webUrl"
    },
    "version": {
      "description": "version of the module, following the [semantic versioning-scheme v2.0.0](https://semver.org/#semantic-versioning-200)",
      "type": ["string", "number"],
      "examples": [
        "2.3.4",
        "0.0.1-24-g6a8a3a7",
        "v0.3.1",
        "6a8a3a7",
        61
      ]
    },
    "release": {
      "description": "URL or repo local path to the release package of this version of the OSH module",
      "$ref": "#/$defs/relPathOrWebUrl"
    },
    "license": {
      "description": "[SPDX ID](https://spdx.org/licenses/) of the license used - if no SPDX key is available yet, use URL to legal code of the license instead - NOTE: When no SPDX key is found by the crawler, metadata won't be uploaded to LOSH until the alternative license has been whitelisted by maintainers. At LOSH we need to make sure that all results are actually open source.",
      "$ref": "#/$defs/spdxLicenseExpression",
      "examples": [
        "GPL-3.0-or-later",
        "AGPL-3.0-or-later",
        "GPL-3.0-only",
        "AGPL-3.0-only",
        "0BSD",
        "CC0-1.0",
        "CC-BY-SA-4.0",
        "CC-BY-4.0",
        "Unlicense"
      ]
    },
    "licensor": {
      "description": "licensor (usually the originator) of the OSH module",
      "type": "string",
      "examples": [
        "John Doe <john.doe@email.com> - FSF",
        "Jane Doe <jane.doe@email.com> - FSF",
        "Michael Mueller <mm@email.com> - OSI",
        "Jinz Jixxer <jj@email.com> - OSI",
        "Pru Ner <abc@email.com> - GNU"
      ]
    },
    "organisation": {
      "description": "organisation of the licensor",
      "type": "string",
      "examples": [
        "Free Software Foundation",
        "Open Source Initiative",
        "Open Source Hardware Association",
        "Open Source Ecology",
        "Open Source Ecology Germany"
      ]
    },
    "readme": {
      "description": "repo-relative path to the readme file",
      "$ref": "#/$defs/relPath",
      "examples": [
        "README.md",
        "README",
        "README-JP.md",
        "README-JP"
      ]
    },
    "contribution-guide": {
      "description": "repo-relative path to the contribution guide",
      "$ref": "#/$defs/relPath",
      "examples": [
        "CONTRIBUTING.md",
        "CONTRIB.md",
        "CONTRIBUTING",
        "CONTRIB"
      ]
    },
    "image": {
      "$ref": "#/$defs/image"
    },
    "documentation-language": {
      "description": "IETF BCP 47 language tag for the language in which the documentation is written",
      "$ref": "#/$defs/language"
    },
    "technology-readiness-level": {
      "description": "OTRL-ID representing the development stage of the OSH module; get it from here: <https://github.com/OPEN-NEXT/LOSH/raw/master/OTRL.ttl>",
      "oneOf": [
        {"const": "OTRL-1", "description": "product specifications/requirements"},
        {"const": "OTRL-2", "description": "proof of concept"},
        {"const": "OTRL-3", "description": "early prototype"},
        {"const": "OTRL-4", "description": "minimum viable product"},
        {"const": "OTRL-5", "description": "safe product"}
      ],
      "default": "OTRL-1"
    },
    "documentation-readiness-level": {
      "description": "ODRL-ID representing the development stage of the documentation; get it from here: <https://github.com/OPEN-NEXT/LOSH/raw/master/OTRL.ttl>",
      "oneOf": [
        {"const": "ODRL-1", "description": "documentation started & accessible"},
        {"const": "ODRL-2", "description": "minimal documentation"},
        {"const": "ODRL-3", "description": "full documentation"},
        {"const": "ODRL-3*", "description": "full documentation, audited"},
        {"const": "ODRL-4", "description": "full documentation including CE certification documents"}
      ],
      "default": "ODRL-1"
    },
    "attestation": {
      "description": "reference to a valid attestation that the documentation is complete and fully qualifies as open source hardware;\\\nissuing conformity assessment bodies according to DIN SPEC 3105-2:\\\n- [Open Hardware Observatory](https://en.oho.wiki/wiki/Request_certification_for_your_project)\\\n- [Open Source Ecology Germany](https://gitlab.opensourceecology.de/verein/projekte/cab/CAB)\\\n- [OSHWA certification programme](https://certification.oshwa.org/)",
      "$ref": "#/$defs/relPathOrWebUrl"
    },
    "function": {
      "description": "functional description, e.g. what it actually does, what problem it solves, for whom, under which conditions etc.\\\nSo if you wish that someone finds & uses your OSH specifically e.g. for COVID-19-crisis response, include relevant keywords in this field",
      "type": "string",
      "examples": [
        "A fully programmable, impeccably built, open source, split mechanical keyboard designed for extreme productivity and ergonomics.",
        "A Handibot tool is a new kind of portable, digitally-controlled power tool for cutting, drilling, carving, and many other machining operations - the first Universal Digital Power Tool (UDPT) - or just, a Smart Tool. If you're familiar with industrial CNC (computer numerically controlled) equipment, think of the Handibot tool as a portable version of CNC. ",
        "A tandem bicycle, with practically the same size, weight, and cost of a standard bicycle.",
        "CARLA is a resistant bicycle trailer, which can be coupled with any regular bike and can transport easily 150 kg load. CARLA distinguishes itself for the outstanding agility and a very small turning circle. CARLA bicycle trailer is very well in tune with e-bikes for example, with a mid-motor.",
        "FarmBot Genesis is top-of-the-line FarmBot model designed with the most features and flexibility. It is suitable for growing food with the highest level of precision, running complex experiments, and capable of being easily modified and extended to do more.",
        "Flipper Zero is a multi tool device for geeks with a curious personality of a cyber-dolphin who really loves to hack. It can interact with digital systems in real life and grow while you are hacking. The idea of Flipper Zero is to combine all the phreaking hardware tools you'd need for hacking on the go.",
        "GEK Gasifier comes as an assemble-yourself kit that provides stand-alone wood gas for a variety of end uses.",
        "Inkplate 6 is a powerful, Wi-Fi enabled ESP32 based six-inch e-paper display - recycled from a Kindle e-reader.",
        "KORUZA innovates the design of a free-space optical communication system reusing mass produced Small Form-factor Pluggable (SFP) electro-optical transceivers, combining the latest advances in low-cost 3D printing using the Fused Deposition Modelling (F DM) method with bare-minimum custom electronics design.",
        "LittleRP is an Open Source Resin 3D Printer ",
        "mechanical setup for the COSI Measure",
        "MNT Reform is the radical, ultimate open hardware laptop, designed and assembled in Berlin.",
        "OpenEVSE supplies open source charging station hardware and software solutions to manufactures and individuals. ",
        "OpenROV is a DIY telerobotics community centered around underwater exploration & adventure.",
        "Opentrons makes robots for biologists. The robots automate experiments that would otherwise be done by hand, allowing our users to spend more time pursuing answers to the 21st century's most important questions, and less time pipetting.",
        "The AXIOM Beta is an open source, open hardware, professional-grade digital film camera made by apertusÂ°. It is designed to be modular e.g. interchangeable sensor front end etc. and supports recording at 4K resolution.",
        "The Corne is a 40% split mechanical USB general purpose keyboard. It is made up of two halves with 3x6 column staggered keys and 3 thumb keys. It has full RGB backlighting, and is fully programmable using the popular Open Source QMK firmware. The basic design principles are, to have a minimal, ergonomically arranged set of keys that are all reachable by moving a finger by at most a distance of one key in diagonal.",
        "The Corne keyboard is a split keyboard with 3x6 column staggered keys and 3 thumb keys, based on Helix. Crkbd stands for Corne Keyboard.",
        "The Electric Eel Wheel is an affordable electric spinning wheel that is revolutionizing the fiber world!  The uptake is controlled with a unique scotch tension design and the yarn flows through a clever flyer assembly. It is an extremely light and portable design.",
        "The goal of GliaX-Faceshield is to create a low cost, high quality, reusable face shield that can be quickly deployed.",
        "The Lasersaur is a beautiful laser cutter with an outstanding price-performance ratio. We designed it to fill the need of makers, designers, architects and researchers who want a safe and highly-capable machine. Unlike others it's open source and comes fully loaded with knowledge to run, maintain, and modify.",
        "The robot having functional characterisctics of animal such as Run, Walk, Crawl, Walk and run in different heights and take push ups operated autonomously and via android app.",
        "This charge controller is a so-called maximum power point tracker (MPPT), which automatically adapts its input voltage to the connected solar panel to extracts as much power as possible. The MPPT function can only be achieved using a DC/DC converter, which is the core part of the charge controller PCB. It can be recognized by the large inductor and the large electrolytic input and output filter capacitors."
      ]
    },
    "standard-compliance": {
      "description": "document-number of the official standard the OSH module complies;\\\nmultiple inputs possible (with one entry each)",
      "type": "array",
      "items": {
        "type": "string"
      },
      "examples": [
        "DIN EN 1335",
        "ISO 1337"
      ]
    },
    "cpc-patent-class": {
      "description": "patent class identifier of the Cooperative Patent Classification that describes best the field of technology of the OSH module.\\\nGet it from here: <https://worldwide.espacenet.com/classification>",
      "$ref": "#/$defs/cpcId"
    },
    "tsdc": {
      "$ref": "#/$defs/tsdc"
    },
    "bom": {
      "description": "URL or repo-relative path to the bill of materials",
      "$ref": "#/$defs/relPathOrWebUrl",
      "examples": [
        "sBoM.csv",
        "BOM.csv",
        "bom.csv"
      ]
    },
    "manufacturing-instructions": {
      "description": "URL or repo-relative path to manufacturing instructions; multiple inputs possible (with one entry each)",
      "anyOf": [
        {
          "$ref": "#/$defs/relPathOrWebUrl"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/relPathOrWebUrl"
          }
        }
      ],
      "examples": [
        "Documentation/Assembly_Guide/AssemblyGuide.md"
      ]
    },
    "user-manual": {
      "description": "URL or repo-relative path to user manual",
      "$ref": "#/$defs/relPathOrWebUrl",
      "examples": [
        "Documentation/User_Guide/UserGuide.md"
      ]
    },
    "outer-dimensions": {
      "$ref": "#/$defs/outerDimensions"
    },
    "mass": {
      "$ref": "#/$defs/mass"
    },
    "source": {
      "$ref": "#/$defs/source"
    },
    "export": {
      "$ref": "#/$defs/export"
    },
    "auxiliary": {
      "$ref": "#/$defs/auxiliary"
    },
    "part": {
      "description": "physical component of this open source hardware module, for which technical documentation (design files etc.) is available under a free/open license",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/$defs/name"
          },
          "image": {
            "$ref": "#/$defs/image"
          },
          "tsdc": {
            "$ref": "#/$defs/tsdc"
          },
          "source": {
            "$ref": "#/$defs/source"
          },
          "export": {
            "$ref": "#/$defs/export"
          },
          "auxiliary": {
            "$ref": "#/$defs/auxiliary"
          },
          "outer-dimensions": {
            "$ref": "#/$defs/outerDimensions"
          },
          "mass": {
            "$ref": "#/$defs/mass"
          }
        },
        "allOf": [
          { "required": [ "name" ] },
          {
            "anyOf": [
              { "required": [ "source" ] },
              { "required": [ "export" ] }
            ]
          }
        ]
      }
    },
    "software": {
      "description": "associated software package used to operate this piece of open source hardware",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "release": {
            "description": "unambiguous reference to the software release used for this version of the OSH module",
            "$ref": "#/$defs/relPathOrWebUrl",
            "examples": [
              "https://github.com/arduino/ArduinoCore-mbed/releases/tag/1.3.2"
            ]
          },
          "installation-guide": {
            "description": "unambiguous refrence to the installation guide for the corresponding software release",
            "$ref": "#/$defs/relPathOrWebUrl",
            "examples": [
              "https://github.com/arduino/ArduinoCore-mbed/blob/a2c06d768f5ebb6821ae6505b2032ee58f4ef70d/README.md"
            ]
          }
        },
        "required": [ "release" ]
      }
    }
  },
  "$defs": {
    "webUrl": {
      "type": "string",
      "format": "uri",
      "pattern": "^https?://"
    },
    "relPath": {
      "type": "string",
      "$comment": "A relative file-path to a dir or file below the root - as much as one can check for that with a regex",
      "not": {
        "anyOf": [
          {
            "$comment": "no protocol",
            "pattern": "^[a-z]*:"
          },
          {
            "$comment": "no URL-absolute path without protocol",
            "pattern": "^//"
          },
          {
            "$comment": "no parent-dir-references",
            "pattern": "(?:.*/)?\\.\\.(?:/.*)?"
          }
        ]
      }
    },
    "relPathOrWebUrl": {
      "type": "string",
      "anyOf": [
        {
          "$comment": "A full web URL",
          "format": "uri",
          "pattern": "^https?://"
        },
        {
          "$ref": "#/$defs/relPath"
        }
      ]
    },
    "cpcId": {
      "$comment": "Get a CPC-ID from here <https://worldwide.espacenet.com/classification>",
      "type": "string",
      "pattern": "^[A-HY][0-9]{2}[A-Z] ?[0-9]{1,2}[/][0-9]{2,4}$",
      "examples": [
        "A01B33/00",
        "A41G",
        "B23K",
        "B25J9/026",
        "B62K",
        "B63C",
        "D03D 35/00",
        "D03D 5/00",
        "D06B",
        "F16M 11/2078",
        "F16M11/2078",
        "G01N",
        "G05B",
        "G06C 7/02",
        "H01H",
        "H01Q",
        "H02J",
        "H02J 1/00",
        "H04",
        "H04N G03B",
        "H04W",
        "H05K",
        "Y02P"
      ]
    },
    "email": {
      "type": "string",
      "format": "email",
      "examples": [
        "jane.doe@email.com",
        "john.doe@email.com",
        "ester.something@good.org"
      ]
    },
    "date": {
      "type": "string",
      "format": "date",
      "examples": [
        "2000-04-06",
        "0001-0-0",
        "1984-10-1"
      ]
    },
    "language": {
      "description": "Language as a BCP 47 language tag",
      "type": "string",
      "pattern": "^((?<grandfathered>(en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang))|((?<language>([A-Za-z]{2,3}(-(?<extlang>[A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-(?<script>[A-Za-z]{4}))?(-(?<region>[A-Za-z]{2}|[0-9]{3}))?(-(?<variant>[A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-(?<extension>[0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(?<privateUse>x(-[A-Za-z0-9]{1,8})+))?)|(?<privateUse>x(-[A-Za-z0-9]{1,8})+))$",
      "examples": [
        "en",
        "de",
        "es",
        "zh"
      ]
    },
    "spdxLicenseExpression": {
      "description": "A valid SPDX license expression",
      "$comment": "TODO We would have to define this in an extra schema, generated -> do it in the SPDX-Identifiers-generater repo! -> NOPE -> already exists! see https://github.com/spdx/spdx-spec/issues/484#issuecomment-720817111    .. sounds like it needs to be improved, though -> .. ahh nope, it does not solve our issue, but checks SPDX documents for validity",
      "type": "string"
    },
    "name": {
      "description": "working title of the OSH module",
      "type": "string"
    },
    "image": {
      "description": "relative or absolute path to one (!) representative image of the OSH module",
      "anyOf": [
        {
          "$ref": "#/$defs/relPathOrWebUrl"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/relPathOrWebUrl"
          }
        }
      ]
    },
    "tsdc": {
      "description": "identifier of the applying Technology-specific Documentation Criteria (TsDC) according to DIN SPEC 3105-1 - get it from here: <https://gitlab.com/OSEGermany/oh-tsdc/-/blob/master/oh-tsdc.ttl> - multiple inputs possible (with one entry each)",
      "type": [ "array", "string" ],
      "items": {
        "type": "string"
      },
      "examples": [
        "ASM",
        "MEC",
        "CIR",
        "PCB",
        "WEL",
	      "3DP",
        "LAS",
        "CNC"
      ]
    },
    "source": {
      "description": "relative or absolute path to source file (e.g. native CAD file);\\\nmultiple inputs possible (with one entry each)",
      "type": [ "array", "string" ],
      "items": {
        "type": "string",
        "$comment": "TODO type should rather be ~ $ref:relPath"
      },
      "examples": [
        "3D-parts/assembly.asm",
        "pcb/main.pro",
        "pcb/main.kicad_pcb",
        "cad/part-x/model.fcstd"
      ]
    },
    "export": {
      "description": "relative or absolute path to export file (e.g. STEP export of 3D model or PDF export of drawing);\\\nmultiple inputs possible (with one entry each)",
      "type": [ "array", "string" ],
      "items": {
        "$ref": "#/$defs/relPathOrWebUrl"
      },
      "examples": [
        "3D-parts/assembly.stp",
        "public/user-manual.pdf"
      ]
    },
    "auxiliary": {
      "description": "relative or absolute path to files that are neither source files nor their exports, but still useful in the repository (e.g. KiCAD library files);\\\nmultiple inputs possible (with one entry each)",
      "type": "array",
      "items": {
        "$ref": "#/$defs/relPathOrWebUrl"
      },
      "examples": [
        "lib/lib1.lib",
        ".mdlrc"
      ]
    },
    "outerDimensions": {
      "description": "openSCAD primitive describing shape and size of the module or part.\\\nSee the openSCAD documentation here for syntax <https://en.wikibooks.org/wiki/OpenSCAD_User_Manual/Primitive_Solids>",
      "type": "object",
      "properties": {
        "openSCAD": { "type": "string" },
        "unit": { "enum" : [ "mm", "m", "cm" ]}
      },
      "required": [ "openSCAD", "unit" ]
    },
    "mass": {
      "type": "object",
      "properties": {
        "value": { "type": "number" },
        "unit": { "enum" : [ "g", "kg" ]}
      },
      "required": [ "value", "unit" ]
    }
  },
  "required": [ "okhv", "name", "repo", "version", "license", "licensor", "function" ]
}
