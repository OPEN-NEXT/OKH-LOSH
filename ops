{"author":{"id":"52c8584678a38419c7d7ec7bae97c4d92731fc757ce0c98565c7ce13fd8aae1c"},"ops":[{"type":3,"timestamp":1676627923,"nonce":"TDxp8gXczdrAQ0QUQ8zorpyX758=","metadata":{"github-id":"IC_kwDOD3p2KM5Vf0py","github-url":"https://github.com/OPEN-NEXT/OKH-LOSH/issues/137#issuecomment-1434405490"},"message":"Moin! Some unasked comments from my side:\n\n- I believed we abandoned the original scope of the issue :) maybe we should continue the discussion in a new issue or elsewhere (possibly an online meeting)\n- not quite sure what the industrial ontology is aiming to solve – is there a problem description somewhere?\n  - I'm a big fan of modular solutions; tiny modules that work well for themselves, are easily understood (low complexity) and integrate well into a bigger scheme (that's essentially what standardization bodies aim to do with their documents :) )\n  - hence I'd be in favor of clear scopes for standalone ontologies, that can be connected to a bigger scheme without conflicts\n  - but that's also just an opinion from someone with little to no experience in that field :)  \n\nregarding your questions:\n\n1. as I'm reading into this right now: that's a non-trivial question :) as (my personal) rule of thumb: more harmonized is better, BUT users of the standard/spec shall be in control of it, otherwise it's not representing their needs (industry controls \"conventional\" technical standards, IETF controls internet specifications etc.)\n2. depends on what you're trying to express, but yes, for now I like the terms (you could also use (non-)tangible\n3. depends on what you're trying to express, levels suggest a certain order\n4. not necessarily \"hard\", but at least tangible :) (in the end, there seem to be various hardware definitions circulating)\n5. nö\n6. I believe the word you're looking for is \"tangible artifact\"\n7. yes :)\n8. depends on what you're trying to express\n9. depends on what you're trying to express :D  \n10. not sure why we'd need the concept of a indivisible part (= átomos (Gr.)) here. parts are arbitrarily defined during the design process of hardware – and of course you can take defined parts from other machines and make other parts out of them (e.g. I liked to make parts out of standard components as those are very cheap to get in a reliable quality). and that's the difference between BoM and \"shopping list\": BoM includes only your parts (and quantities, specs etc.) and the shopping list states where you're getting the materials from. e.g. shopping list may include parts from another machine that are then processed into parts that appear in your BoM\n11. depends on what you're trying to express :D (but possibly yes)\n12. isn't a modular machine a physical representation of a modular design?\n13. if you're trying to map the world – yea, why not? :) (but why?)\n14. if(13=true → yes)\n15. when we know _why_ we want to deal with them, then we also know how :)\n16. fit into what? e.g. in an earlier version of the TsDC I introduced the concept of \"auxiliary components\" e.g. machine oil\n17. hmm… I'm not getting the purpose of this, sorry, no comment\n18. not quite sure, seems like philosophical question with different answers :)\n19. should we: I'd recommend so, yes. How can we: by setting a scope :) I believe it's best to start with a problem description","files":null}]}