{"author":{"id":"aed0d72ca16b13a779b1d37a0771f1682d5a59e673ecfbcdd34155713180df84"},"ops":[{"type":1,"timestamp":1671176944,"nonce":"/UwcObAJXgHpc23MxOOtGIwIMCU=","metadata":{"github-id":"I_kwDOD3p2KM5ZZHDx","github-url":"https://github.com/OPEN-NEXT/OKH-LOSH/issues/135","origin":"github"},"title":"Naming Convention (for identifiers)","message":"This mainly concerns property- and class-names.\n\nWe should choose one and stick to it, and I would prefer it to match mostly what is already out there.\n\nI came to this issue, because we have properties with a `has` prefix, which seems odd to me,\nas I have no seen this often in widely used ontologies.\n\nDoing some research, I found two options, but none of them seems very official.\n\n1. I like this one, but it is not very explicit with examples:\n    \u003chttp://www-sop.inria.fr/acacia/personnel/phmartin/RDF/conventions.html\u003e\n    It also seems to match with the common RDF ontologies out there ... mostly.\n    excerpt: \"Singular Nouns for Names (whenever possible) ... Even for Property Names\"\n\n2. This one has some parts contradicting the previous one:\n    \u003chttps://github.com/G-Node/python-odml/issues/112\u003e\n    for example: \"Name all properties as verb senses\"\n    which means that they suggest a `has` prefix for properties,\n    e.g. `hasReadme` vs just `readme`.\n\nI saw even schema.org use both of these (though only about 20 properties use the `has` prefix).","files":null}]}