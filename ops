{"author":{"id":"52c8584678a38419c7d7ec7bae97c4d92731fc757ce0c98565c7ce13fd8aae1c"},"ops":[{"type":1,"timestamp":1607365075,"nonce":"SRRVkRw6+gEZmu9TCYGYh4Ly7Bs=","metadata":{"github-id":"MDU6SXNzdWU3NTg3MzUxMzA=","github-url":"https://github.com/OPEN-NEXT/OKH-LOSH/issues/50","origin":"github"},"title":"new metadata policy removing POSH files","message":"In relation to #46 we can reduce the amount of manual labour significantly when referencing POSH-information other than by POSH files.\n\nFormer use was (briefly):\n\n1. unambiguous reference to a specific version of a POSH with corresponding source \u0026 export files\n2. part-specific production metadata (volume, material, tolerance class etc.)\n\n1) may be covered by good URLs and some easy rules on the structure of the repository\n\n- each part (POSH) must have it's own folder containing all design files (both source \u0026 export)\n  - the crawler would then get the URLs of _all_ files from that folder, sorting them into source \u0026 export files judging from their file format (unknown file formats will be handled as source files)\n- likely MOSH files will be then referenced by an URL linking to a specific release\n  - a crawler may find a OKH file there :)\n  - if the URL points to anything else (e.g. a Wikipage with all the information), that's also fine although not following the policy here\n\n2) Managing production metadata seems right now to far from our actual reality. We still do not know whether or not it's a good idea to deliver this metadata in individual JSON files, if people (or manufacturers) would use (\u0026maintain!) them and _which_ data fields are practically useful, since we don't have the network to test this here (we could, BTW next year in another project)\n\nInstead, we could extend the use of `productionMetadata` in MOSH files. It would then generally provide selected production information about the whole assembly e.g. finest tolerance class in this assembly or very large parts etc.","files":null}]}