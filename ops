{"author":{"id":"3b0f63059905a923bd28ac622d6e3b485ebb386455b22b2fc2abbdec326d312c"},"ops":[{"type":3,"timestamp":1621515472,"nonce":"rWQ2K+ho5GDhC8wA6JRPXFJqEWo=","metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDg0NTA5MzkyOA==","github-url":"https://github.com/OPEN-NEXT/OKH-LOSH/issues/98#issuecomment-845093928"},"message":"With the current setup, you could have several different URL-type properties on a wiki – let’s say, P1 and P2. And in one request, you could specify the `\"urlReconcile\"` as P1, and the reconciliation API would look for existing items with P1 statements containing the URLs specified in the request, and create new items if no existing items are found; and in another request, you could specify the `\"urlReconcile\"` as P2, and the API would instead look for items with _P2_ statements containing the requested URLs. The same URLs could match different items (or, match an existing item or create a new one), depending on the reconciliation property ID specified in each request.\n\nI imagine this might be useful when importing items from several, partially overlapping sources into the same Wikibase. You could import items from source A using the source A URL property, and items from source B using the source B URL property; and when you notice that an item was present in both sources, you merge the Wikibase items, so that they now have statements for both of those properties, and then you can continue to reconcile against those items in later requests.","files":null}]}