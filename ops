{"author":{"id":"aed0d72ca16b13a779b1d37a0771f1682d5a59e673ecfbcdd34155713180df84"},"ops":[{"type":3,"timestamp":1600541924,"nonce":"/N3rsuRh1yMHchlPDEtlh9k6s6E=","metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDY5NTM0NDY2NQ==","github-url":"https://github.com/OPEN-NEXT/OKH-LOSH/issues/24#issuecomment-695344665"},"message":"hmmm :/\nok, what you tried to do was more.. getting lots of info about a single repo, while we want rather a tiny bit of info about a lot of repos; basically just: *does path \"/okh.yml\" exist in latest main branch?*\nbut yeah... seems the API is not good for both (though I would not trust my research so far to have been exhaustive of the possibilities.\n\ncurated lists...\nwhat about a kind of combined approach:\n\nwe get a list of all repos on github that have the *hardware* tag/topic, and regularly check through them, whether they have the meta-data file, or whether it changed. thus this is kind of an automatically \"curated\" list. in less frequent intervals, we check if new repos using the *hardware* tag have been added. additionally, we supply a web-form to manually request re-visiting a specific repo, in case somebody is eager.\n\nThe requirement of the *hardware* tag helps because:\n\n* it allows to separate hardware- from non-hardware-repos\n* it makes crawling much easier, as we only have to fetch and check through a tiny percentage of repos\n\n... it also excludes repos that do not have the tag, but people already need to know about adding the meta-data file anyway, so that is a small additional hurdle, and even apart from requireing the tag for our crawler, it makes sense that hardware related repos have this tag.\n\nboth GitLab and GitHub hav repo topics (essentially tags). on other sites that might not have them, we could just fall back onto crawling all repos.\n\n... looking for the meta-data file would happen through brute force crawling, if not possible through the API, then through HTTP/HTML.\n\ndoes that make sense?","files":null},{"type":6,"timestamp":1600541959,"nonce":"HH0JMPma4CBPR0vZoDdlgz/r3s0=","metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDAxMTkwOTE4"},"target":"a3ada85d6aa98333cf8455d252cdcb5dcc1bb234f93ba1a016b079aed5ebd731","message":"hmmm :/\nok, what you tried to do was more.. getting lots of info about a single repo, while we want rather a tiny bit of info about a lot of repos; basically just: *does path \"/okh.yml\" exist in latest main branch?*\nbut yeah... seems the API is not good for both; though I would not trust my research so far to have been exhaustive of the possibilities.\n\ncurated lists...\nwhat about a kind of combined approach:\n\nwe get a list of all repos on github that have the *hardware* tag/topic, and regularly check through them, whether they have the meta-data file, or whether it changed. thus this is kind of an automatically \"curated\" list. in less frequent intervals, we check if new repos using the *hardware* tag have been added. additionally, we supply a web-form to manually request re-visiting a specific repo, in case somebody is eager.\n\nThe requirement of the *hardware* tag helps because:\n\n* it allows to separate hardware- from non-hardware-repos\n* it makes crawling much easier, as we only have to fetch and check through a tiny percentage of repos\n\n... it also excludes repos that do not have the tag, but people already need to know about adding the meta-data file anyway, so that is a small additional hurdle, and even apart from requireing the tag for our crawler, it makes sense that hardware related repos have this tag.\n\nboth GitLab and GitHub hav repo topics (essentially tags). on other sites that might not have them, we could just fall back onto crawling all repos.\n\n... looking for the meta-data file would happen through brute force crawling, if not possible through the API, then through HTTP/HTML.\n\ndoes that make sense?","files":null}]}