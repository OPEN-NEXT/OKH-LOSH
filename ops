{"author":{"id":"aed0d72ca16b13a779b1d37a0771f1682d5a59e673ecfbcdd34155713180df84"},"ops":[{"type":3,"timestamp":1671178428,"nonce":"Fm1OB2isxkVbroee60MYEg6bnto=","metadata":{"github-id":"IC_kwDOD3p2KM5QufYt","github-url":"https://github.com/OPEN-NEXT/OKH-LOSH/issues/135#issuecomment-1354364461"},"message":"This post goes into detail for exactly the issue I faced (`has` prefix), explains it so even I understand it, and gives a solution for when to use the prefix and when not:\n\nhttp://www.jenitennison.com/2009/09/13/naming-properties-and-relations.html\n\nrelevant parts:\n\n\u003e So we have two vocabularies that represent the same concepts with equivalent classes, and obviously they have equivalent properties linking them. And this is what I find interesting. In the FRBR vocabulary, the relationships are:\n\u003e \n\u003e - frbr:Work -- frbr:realization --\u003e frbr:Expression\n\u003e - frbr:Expression -- frbr:realizationOf --\u003e frbr:Work\n\u003e - frbr:Expression -- frbr:embodiment --\u003e frbr:Manifestation\n\u003e - frbr:Manifestation -- frbr:embodimentOf --\u003e frbr:Expression\n\u003e \n\u003e The FRBR vocabulary uses nouns to name the relations. It’s the same pattern that’s often used to name properties (ie predicates that take literals as values):\n\u003e \n\u003e - foaf:name\n\u003e - dc:title\n\u003e - rdfs:label\n\u003e \n\u003e Using nouns leads you to read statements in the pattern “subject’s predicate is object”:\n\u003e \n\u003e - Jeni’s name is “Jeni”\n\u003e - the legislation’s title is “Criminal Justice Act 1993”\n\u003e - England’s label is “England”\n\u003e - the legislation’s realization is the version from 1st December 2001\n\u003e - this document’s embodiment is that XML file\n\u003e \n\u003e The trouble is that this pattern really doesn’t work for the inverse relationships: frbr:realizationOf and frbr:embodimentOf:\n\u003e \n\u003e - the version from 1st December 2001’s realization of is the legislation\n\u003e - that XML file’s embodiment of is this document\n\u003e \n\u003e They really want to support a sentence structure like “subject is a predicate object”:\n\u003e \n\u003e - the version from 1st December 2001 is a realization of the legislation\n\u003e - that XML file is a embodiment of this document\n\u003e \n\u003e But if you then map that back to the original relation, you run into trouble, because there’s a temptation to add a preposition into the sentence to make it make sense, and inserting that preposition inverts the meaning of the statement:\n\u003e \n\u003e - the legislation is a realization [of] the version from 1st December 2001\n\u003e - this document is a embodiment [of] that XML file\n\u003e \n\u003e You don’t run into this problem when you use nouns to name properties because there’s never an inverse relationship from a literal to a resource that you need to name. You also won’t run into it for relations that have easily named inverses, such as parent/child or owner/possession although there is a similar confusion with the use of comparatives for relation names, as in SKOS, where the relation skos:broader could mean:\n\u003e \n\u003e - X is broader than Y; or\n\u003e - X’s broader term is Y\n\u003e \n\u003e In the Metalex ontology, on the other hand, the relationships are:\n\u003e \n\u003e - metalex:BibliographicWork -- metalex:realizedBy --\u003e metalex:BibliographicExpression\n\u003e - metalex:BibliographicExpression -- metalex:realizes --\u003e metalex:BibliographicWork\n\u003e - metalex:BibliographicExpression -- metalex:embodiedBy --\u003e metalex:BibliographicManifestation\n\u003e - metalex:BibliographicManifestation -- metalex:embodies --\u003e metalex:BibliographicExpression\n\u003e \n\u003e Here, the relationships are verbs, leading you to read sentences in the form “subject [is] predicate object”:\n\u003e \n\u003e - the legislation is realized by the version from 1st December 2001\n\u003e - the version from 1st December 2001 realizes the legislation\n\u003e - this document is embodied by that XML file\n\u003e - that XML file embodies this document\n\u003e \n\u003e The only weirdness here is having to add “is” before some predicates but not others.\n\u003e \n\u003e The tradition in AI is to use verbs everywhere. Instead of foaf:name or dc:title, you would have foaf:hasName and dc:hasTitle. Doing this for properties with literal values seems unnecessarily verbose, but for relations I think it’s a good rule of thumb in order to disambiguate the direction of the relation.","files":null},{"type":3,"timestamp":1690626064,"nonce":"uKy0CCrohhQhfzFW59m0gx30h0o=","metadata":{"github-id":"IC_kwDOD3p2KM5ivzZm","github-url":"https://github.com/OPEN-NEXT/OKH-LOSH/issues/135#issuecomment-1656698470"},"message":"This should now be mostly \"in vivo\"","files":null}]}