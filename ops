{"author":{"id":"52c8584678a38419c7d7ec7bae97c4d92731fc757ce0c98565c7ce13fd8aae1c"},"ops":[{"type":3,"timestamp":1607946721,"nonce":"riRXbQLoZNT0p33gJqzv8rjWCug=","metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDc0NDM4OTY0Ng==","github-url":"https://github.com/OPEN-NEXT/OKH-LOSH/issues/46#issuecomment-744389646"},"message":"as noted in the last update (relating to #50), POSH files are found in specific folders, the collector automatically sorts them into source \u0026 export files (as included in the requirements [here](https://github.com/OPEN-NEXT/LOSH/blob/master/tmp_requirements-collector-API.md#collector)","files":null},{"type":3,"timestamp":1607969696,"nonce":"ftp5vti1KNkJohelC905RfeHY6s=","metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDc0NDYxODczOQ==","github-url":"https://github.com/OPEN-NEXT/OKH-LOSH/issues/46#issuecomment-744618739"},"message":"**Update:**\n\n- the approach linked above won't be followed since\n  - repo structures are always different and no one will submit to our rules\n  - we would strongly recommend having manually exported files in a git repository, which is also a bad idea\n- the former approach (having individual POSH files including links to source \u0026 (external) export files) is way too much manual effort\n- other assessed (semi-)automated approaches are dangerous/unstable/easy to break in practice especially when people are not fully aware of how to comply the policies in the metadata standard or how to use a git repository or not using a git repository at all (e.g. find source files by their name, allow custom rules (python code) in a JSON file,…)","files":null},{"type":6,"timestamp":1607971565,"nonce":"BWdKI1/Y6DnS9zJl+GLo2W3BxZg=","metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDIwOTc2Mzcw"},"target":"eb36f8ca92f4bbaa57c7387f440034f12aae7e0721f811bd7a8da65a89dd1443","message":"**Update:**\n\n- the approach linked above won't be followed since\n  - repo structures are always different and no one will submit to our rules\n  - we would strongly recommend having manually exported files in a git repository, which is also a bad idea\n- the former approach (having individual POSH files including links to source \u0026 (external) export files) is way too much manual effort\n- other assessed (semi-)automated approaches are dangerous/unstable/easy to break in practice especially when people are not fully aware of how to comply the policies in the metadata standard or how to use a git repository or not using a git repository at all (e.g. find source files by their name, allow custom rules (python code) in a JSON file,…)\n- even for the MOSH assembly itself different approaches exist (e.g. assembly drawing/3D model possibly accompanied by assembly instructions in other files)","files":null},{"type":3,"timestamp":1607970951,"nonce":"qpoV2Kf9ghRwl/caLke+TrIwN6g=","metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDc0NDYzMDQwMQ==","github-url":"https://github.com/OPEN-NEXT/OKH-LOSH/issues/46#issuecomment-744630401"},"message":"**New approach:**\n\nshort: packaging is excluded\n\n- a repo contains\n  - `.okh.json` (MOSH)\n  - `sBoM.csv`\n- a MOSH\n  - is an item on Wikibase\n  - has 'subitems', which are version-specific MOSHs, of course linked to the 'generic' MOSH\n  - can have an \"export package\", which is a permanent URL linking to e.g. a GitHub package\n- MOSHs from other repos (which are linked in the `sBoM`) are referenced via any permanent URL. The crawler/collector looks onto the URL in the `sBoM` of `MOSH A` and finds either:\n  - repository _and_ version information, so MOSH A can be linked to a specific other version of a MOSH B, which either\n    - exists on Wikibase (identifiable via repo \u0026 version) or\n    - must be created as new item (+ data is recursively loaded from the GitHub-API (license, licensor etc.))\n  - repository information only, so MOSH A is linked to a generic MOSH B\n  - no information apart from the URL itself → new item is created for MOSH B, just with it's name (from the `sBoM`) and it's URL and is linked to MOSH A\n- crawler identifies used data formats from the GitHub-API directly since source / export files are no longer linked in the JSON\n\nBackground:\n\n- when version-specific information is lost in the Wikibase-connection, nothing bad happens since it's still included in the sBoM or rather in it's representation on Wikibase\n  - so if we fail to get the version of MOSH B from a URL pointing to a specific commit, people would still get to this commit by clicking on it, but the connection between MOSH A \u0026 B would be only on a generic level, which is fine for v1.0 of a demonstrator; who knows if we actually need version-specific queries; for _building_ however this information is essential","files":null},{"type":6,"timestamp":1607972216,"nonce":"fhIXJqRHo2v3H/5KCbi5Ee0//EI=","metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDIwOTc5MDU3"},"target":"0003f5751889a472fd6b313df6982b1826c14e8019c8cfaa2a1fd5f96baaac4d","message":"**New approach:**\n\nshort: packaging is excluded\n\n- a repo contains\n  - `.okh.json` (MOSH)\n  - `sBoM.csv`\n- a MOSH\n  - is an item on Wikibase\n  - has 'subitems', which are version-specific MOSHs, of course linked to the 'generic' MOSH\n  - can have an \"export package\", which is a permanent URL linking to e.g. a GitHub package\n- MOSHs from other repos (which are linked in the `sBoM`) are referenced via any permanent URL. The crawler/collector looks onto the URL in the `sBoM` of `MOSH A` and finds either:\n  - repository _and_ version information, so MOSH A can be linked to a specific other version of a MOSH B, which either\n    - exists on Wikibase (identifiable via repo \u0026 version) or\n    - must be created as new item (+ data is recursively loaded from the GitHub-API (license, licensor etc.))\n  - repository information only, so MOSH A is linked to a generic MOSH B\n  - no information apart from the URL itself → new item is created for MOSH B, just with it's name (from the `sBoM`) and it's URL and is linked to MOSH A\n- a POSH\n  - is no longer linked in Wikibase as an individual item (unless for a small extra set of data to show what would be possible)\n  - is referenced in a `sBoM` by any feasible URL pointing to the place where development of that part is happening\n- crawler identifies used data formats from the GitHub-API directly since source / export files are no longer linked in the JSON\n\nBackground:\n\n- when version-specific information is lost in the Wikibase-connection, nothing bad happens since it's still included in the sBoM or rather in it's representation on Wikibase\n  - so if we fail to get the version of MOSH B from a URL pointing to a specific commit, people would still get to this commit by clicking on it, but the connection between MOSH A \u0026 B would be only on a generic level, which is fine for v1.0 of a demonstrator; who knows if we actually need version-specific queries; for _building_ however this information is essential","files":null},{"type":3,"timestamp":1607972253,"nonce":"05g0t2R31Xwr3XJ7n3ZyV9Te1hc=","metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDc0NDY0MTcwOA==","github-url":"https://github.com/OPEN-NEXT/OKH-LOSH/issues/46#issuecomment-744641708"},"message":"[OSH-metadata.md](OSH-metadata.md) shall be updated accordingly","files":null},{"type":3,"timestamp":1611674039,"nonce":"TCThHWfsAJyNKqpPhoENZV5FKZo=","metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDc2NzYxMDQ3OA==","github-url":"https://github.com/OPEN-NEXT/OKH-LOSH/issues/46#issuecomment-767610478"},"message":"I assume only a GUI (or any kind of semi-automated process) can solve this issue. For the moment, I'd recommend people to just copy \u0026 modify their POSH files \u0026/ use our [templates](sample_data)","files":null},{"type":6,"timestamp":1611674078,"nonce":"mvnekel6undDWc7Is2kupPZMPhg=","metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDI5NzQ5MzI5"},"target":"d1bcd1093d33deab2cf3718ac5ce9fbb9fee068df230d08082a5fab36ecabeb6","message":"I assume only a GUI (or any kind of semi-automated process) can solve this issue. For the moment, I'd recommend people to just copy \u0026 modify their POSH files \u0026/ use our [templates](/sample_data/okh-MOSH-TEMPLATE.json)","files":null},{"type":4,"timestamp":1611674039,"nonce":"Mjy8Dq/wBmeKJH7vLgJg5cQSvzg=","metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50NDI1MTE4MTExNQ=="},"status":2}]}