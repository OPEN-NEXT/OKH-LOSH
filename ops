{"author":{"id":"aed0d72ca16b13a779b1d37a0771f1682d5a59e673ecfbcdd34155713180df84"},"ops":[{"type":3,"timestamp":1674238378,"nonce":"sOTCpbrDVJIeiX8upTSsWZKQ+bE=","metadata":{"github-id":"IC_kwDOD3p2KM5TX2xE","github-url":"https://github.com/OPEN-NEXT/OKH-LOSH/issues/137#issuecomment-1398762564"},"message":"one more thing regarding this topic: in RDF, we have these two proeprties:\n\n```\nokh:hasComponent\n  a owl:ObjectProperty ;\n  rdfs:label \"has Component\" ;\n  rdfs:comment \"links to parts of the module\" ;\n  schema:rangeIncludes okh:Part ;\n  schema:domainIncludes okh:Module ;\n  .\n\nokh:usesModule\n  a owl:ObjectProperty ;\n  rdfs:label \"uses Module\" ;\n  rdfs:comment \"refers to a *release*/snapshot of an (external) OSH Module used in this design (should also appear in the BoM)\" ;\n  schema:rangeIncludes\n    okh:Module,\n    okh:WebsiteUrl ;\n  schema:domainIncludes okh:Module ;\n```\n\n`okh:Component` is the super-class of both `okh:Module` and `okh:Part`, but `okh:hasComponent` only works for `okh:Part`s, not for `okh:Module`. So I would say we either make hasComponent for for Modules too, and remove usesModule, or we rename hasComponent.\n\nAnd other question I have is, why is it **has**Compnent, but **uses**Module?","files":null},{"type":3,"timestamp":1674374817,"nonce":"1oIQ8ENUMveSIDlB3/QeZynRGxs=","metadata":{"github-id":"IC_kwDOD3p2KM5TaY0i","github-url":"https://github.com/OPEN-NEXT/OKH-LOSH/issues/137#issuecomment-1399426338"},"message":"# How to call non-Part \u0026 non-Module things\n\nExample: screws\nScrews are standard items which will appear in the BoM but not in the manifest, because they are neither a module nor what we call a part in OKH. Do we have a name for them already? BoM-items?\nWe may not need this in the ontology, but we still need it to differentiate and explain in the associated text, and maybe even in comments in the ontology. (need might be too storng of a word, but it would be helpful for sure)\nTo me, it would make more sense to call both of these (what we currently call parts, and things like screws) Parts (as a super-category), and call screws Standard-Parts and a 3D-printed part a ... maybe manufactured-Part?\n\nThen again, I know though has already flown into this, which I am not aware of.","files":null},{"type":6,"timestamp":1674374828,"nonce":"j8vshKfo6RodIirsxfXv3+Agyn8=","metadata":{"github-id":"UCE_lALOD3p2KM5TaY0iziw9OX8"},"target":"cfc4b9e202d916b91b30bae216c05934cea2833499f39292fa7d9e381c96cc74","message":"# How to call non-Part \u0026 non-Module things\n\nExample: screws\nScrews are standard items which will appear in the BoM but not in the manifest, because they are neither a module nor what we call a part in OKH. Do we have a name for them already? BoM-items?\nWe may not need this in the ontology, but we still need it to differentiate and explain in the associated text, and maybe even in comments in the ontology. (need might be too strong of a word, but it would be helpful for sure)\nTo me, it would make more sense to call both of these (what we currently call parts, and things like screws) Parts (as a super-category), and call screws Standard-Parts and a 3D-printed part a ... maybe manufactured-Part?\n\nThen again, I know though has already flown into this, which I am not aware of.","files":null}]}