{"author":{"id":"aed0d72ca16b13a779b1d37a0771f1682d5a59e673ecfbcdd34155713180df84"},"ops":[{"type":3,"timestamp":1691132446,"nonce":"vy22LnaX94X+y2+HS1YVTZox0K8=","metadata":{"github-id":"IC_kwDOD3p2KM5jP4vW","github-url":"https://github.com/OPEN-NEXT/OKH-LOSH/issues/113#issuecomment-1665108950"},"message":"the thing is, that there are different kinds of images, useful for different things, and I think multiple of these make sense for OKH in practice, or say, for consumers of the OKH data. This is actually how this issue came to be, as dyne/FCHH/INTERFACER/FCOS came up with this need. I do not think, that a single image per project is good enough. for example, think of the projects on the OSEG Wiki: Most of them have a kind of logo, where one can identify the project easily with the image being small, next to many other project images. On the other hand, If one looks at a single project, one would rather want to see a photo of the finished product in large, to have a quick idea what this is about and see some details. This same photo though, is not useful in small, next to many other small photos of projects.\nThis can not be solved with a caption/description (instead of category/tags).","files":null},{"type":3,"timestamp":1691153666,"nonce":"WCKRHwWE+ClJCucyQNfRF3NWvvI=","metadata":{"github-id":"IC_kwDOD3p2KM5jRnlW","github-url":"https://github.com/OPEN-NEXT/OKH-LOSH/issues/113#issuecomment-1665562966"},"message":"In the meeting we had this morning, @moedn and me came to the conclusion, that this makes sense.\nWe will **support** both the **old way** of specifying images:\n\n```toml\nimage = \"img/this-thing.png\"\n```\n\n**and the new way**:\n\n```toml\n[[image]]\nlocation = \"img/this-thing.png\"\ncategory = \"photo\"\ndescription = \"This shows the front of the finished machine with a gold finish\"\n```\n\nIn the new way (composed object vs literal), we will support:\n\n- `location` (required) for a repo-relative path or  web-URL\n- `category` (optional) as a single string, chosen from a predefined, closed set of categories (yet to be defined)\n- `description` (optional) as a free-form text describing the image, which might e used as caption or alt-text\n\nTo come up with the categories for images, we will consult with dyne.org,\nbut any comments here from anyone are very welcome too!","files":null},{"type":3,"timestamp":1691312497,"nonce":"HQlmqDPDyBDtn0j52cp/hLhHZ74=","metadata":{"github-id":"IC_kwDOD3p2KM5jWRLH","github-url":"https://github.com/OPEN-NEXT/OKH-LOSH/issues/113#issuecomment-1666781895"},"message":"image category examples (just to start the though process for everyone):\n\n- main\n- wire-frame\n- logo\n- 16px\n- 32px\n- 64px\n- 128px\n- 256px\n- photo\n- schematic\n- artistic\n- specs\n- front\n- back\n- top\n- bottom\n- left\n- right\n- animated\n- diagram\n- packaging\n- team","files":null},{"type":6,"timestamp":1691312587,"nonce":"GbyY1VsVC1l1I+3eQ3mU1goKHb4=","metadata":{"github-id":"UCE_lALOD3p2KM5jWRLHzjVT74w"},"target":"39fd1d846433b62b6ff7174481b02d13974a69f3b8a15b5b3d575ed23ff322e7","message":"image category examples (just to start the though process for everyone):\n\n- main\n- wire-frame\n- logo\n- 16px\n- 32px\n- 64px\n- 128px\n- 256px\n- photo\n- schematics\n- pcb\n- tech-drawing\n- artistic\n- specs\n- front\n- back\n- top\n- bottom\n- left\n- right\n- animated\n- diagram\n- packaging\n- team","files":null},{"type":6,"timestamp":1691313466,"nonce":"JRKaFsSJuD/6GKLBTD05N2JrPnw=","metadata":{"github-id":"UCE_lALOD3p2KM5jWRLHzjVT95c"},"target":"39fd1d846433b62b6ff7174481b02d13974a69f3b8a15b5b3d575ed23ff322e7","message":"image category examples (just to start the though process for everyone):\n\n- main\n- wire-frame\n- logo\n- 16px\n- 32px\n- 64px\n- 128px\n- 256px\n- photo\n- schematics\n- pcb\n- tech-drawing\n- sewing-pattern\n- artistic\n- specs\n- front\n- back\n- top\n- bottom\n- left\n- right\n- animated\n- diagram\n- packaging\n- team","files":null},{"type":6,"timestamp":1691313632,"nonce":"62X130Kt4TyK3PIJL49qo77IlNk=","metadata":{"github-id":"UCE_lALOD3p2KM5jWRLHzjVT-Ro"},"target":"39fd1d846433b62b6ff7174481b02d13974a69f3b8a15b5b3d575ed23ff322e7","message":"image category/tag examples (just to start the though process for everyone):\n\n- main\n- preview\n- overview\n- wire-frame\n- logo\n- 16px\n- 32px\n- 64px\n- 128px\n- 256px\n- photo\n- schematics\n- pcb\n- tech-drawing\n- sewing-pattern\n- artistic\n- specs\n- front\n- back\n- top\n- bottom\n- left\n- right\n- animated\n- diagram\n- packaging\n- team","files":null},{"type":3,"timestamp":1697779924,"nonce":"3jW5qtxvhRQsrRxViOaV4LKsqls=","metadata":{"github-id":"IC_kwDOD3p2KM5poDlC","github-url":"https://github.com/OPEN-NEXT/OKH-LOSH/issues/113#issuecomment-1772108098"},"message":"# My current view:\n\nThe technically most flexible and capable solution would be,\nto support these two properties simultaneously:\n\n1. `slots`: any of a predefined (by OKH) set of values.\n    An image could fill multiple slots,\n    but each slot can be filled at most once.\n    This is useful for things like the project-icon,\n    or the left-side view of the 3D model.\n\n    examples:\n\n    - `logo`\n    - `icon-main`\n    - `icon-main-bw` (black\u0026white)\n    - `social` (social media preview)\n    - `organization-logo`\n    - `organization-logo-bw` (too much?)\n    - `symbol` (see [Icon vs Symbol](#icon-vs-symbol) below)\n    - `photo-thing-main`\n    - `photo-packaging`\n    - `model-from-left`\n    - `model-from-right`\n    - `model-from-top`\n    - `model-from-bottom`\n    - `model-from-front`\n    - `model-from-back`\n    - `model-3d`\n    - `model-main`\n    - ... (TODO: Revise this list)\n\n2. `tags`: a number of predefined+self-defined values.\n    An image could have 0 to many tags attached.\n    Each tag could be used by multiple images.\n\n    examples:\n\n    - `photo`\n    - `icon`\n    - `logo`\n    - `model`\n    - `art(istic)`\n    - `diagram`\n    - `color`\n    - `b\u0026w`\n    - `screenshot`\n    - ... (TODO: Revise this list)\n\n## Examples\n\n```toml\n[[image]]\npath = \"res/assets/media/img/main-photo.png\"\nslots = [\n  \"photo-thing-main\",\n]\ntags = [\n  \"photo\",\n  \"color\",\n]\n\n[[image]]\nurl = \"https://bla.com/logo.png\"\nslots = [\n  \"organization-logo\",\n]\ntags = [\n  \"logo\",\n  \"color\",\n]\n\n[[image]]\npath = \"res/media/img/icon.svg\"\nslots = [\n  \"icon-main\",\n]\ntags = [\n  \"icon\",\n  \"color\",\n]\n\n[[image]]\npath = \"res/media/img/icon-bw.svg\"\nslots = [\n  \"icon-main-bw\",\n]\ntags = [\n  \"icon\",\n  \"b\u0026w\",\n]\n\n[[image]]\npath = \"res/assets/media/img/screenshot-1.png\"\nslots = [\n]\ntags = [\n  \"screenshot\",\n  \"color\",\n]\n\n[[image]]\npath = \"res/assets/media/img/screenshot-2.png\"\nslots = [\n]\ntags = [\n  \"screenshot\",\n  \"color\",\n]\n\n[[image]]\npath = \"res/assets/media/img/model.png\"\nslots = [\n  \"model-3d\",\n]\ntags = [\n  \"model\",\n  \"color\",\n]\n```\n\n## Icon vs Symbol\n\n(source: [flaticon.com](https://www.flaticon.com/blog/difference-between-symbols-and-icons/))\n\n\u003e An **icon** is a simple image that _represents a real thing_.\n\u003e For example, a shopping cart icon.\n\u003e\n\u003e A **symbol** is a simple image whose _meaning must be learned_.\n\u003e For example, most traffic signage is made of symbols.\n\u003e A \"no parking\" sing with a P crossed out with red\n\u003e needs to be learned to be understood.","files":null}]}