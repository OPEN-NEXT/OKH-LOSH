{"author":{"id":"aed0d72ca16b13a779b1d37a0771f1682d5a59e673ecfbcdd34155713180df84"},"ops":[{"type":6,"timestamp":1642590926,"nonce":"pQhyN6zH44ESdW213OBUosOHzLc=","metadata":{"github-id":"UCE_lAHOD3p2KM5AH7r5zijBaa4"},"target":"dfd0235bf093b9a6ca0100fcf46727d2a6649f4578c54c52440adaedfa591ae8","message":"In the examples and the TOMLs we have, all the paths start with `/`,\nwhich is commonly known as a (file-system-)absolute path.\nIn our case though, it is relative to the repo root,\nfor both the main module and sub-modules (parts).\n\nI propose to support only relative path syntax,\nso this:\n\n```toml\nmanufacturing-instructions = \"/KORUZA-instructions/tree/gh-pages/instructions\"\n```\n\nwould become:\n\n```toml\nmanufacturing-instructions = \"KORUZA-instructions/tree/gh-pages/instructions\"\n```\n\nin theory, this is also a relative path syntax we could use:\n\n```toml\nmanufacturing-instructions = \"./KORUZA-instructions/tree/gh-pages/instructions\"\n```\n\nbut that is only commonly used on file-systems, not in URLs (thus less \"portable\"),\nand needs more complicated parsing, without any benefit that I could see.\n\nThe only technical reason to use absolute paths (which would mean absolute to the repo root),\nis that a submodule would point to something outside its own folder, e.g. the README of the parent module, or an image in a sibling module. While this would be rare in practice, it would also be harmful, because the module would be.. less modular, as it is not contained within its folder. This creates all kinds of complications, and really.. should never be done, in my opinion.\n.. not to mention, that using absolute paths as a form of .. alternative relative paths, causes lots of confusion with users and will result in many bugs in any tool that wants to use the standard.","files":null},{"type":3,"timestamp":1642601214,"nonce":"k/MI7i2E9JtMyqBNq8199LBvQVc=","metadata":{"github-id":"IC_kwDOD3p2KM48lonE","github-url":"https://github.com/OPEN-NEXT/OKH-LOSH/issues/117#issuecomment-1016498628"},"message":"aha.. I just read the related part in the [OKH v1 spec](https://barbal.co/the-open-know-how-manifest-specification-version-1-0/), section *4.3.4 Absolute and relative links*:\n\n\u003e Absolute paths shall include the full path to the resource including the protocol.\n\nThat effectively means, that they renamed URLs \"Absolute Paths\".\n... really??? :O","files":null},{"type":3,"timestamp":1642601535,"nonce":"05oNIRzcLXCouim3WhsgSBP+7GE=","metadata":{"github-id":"IC_kwDOD3p2KM48lp0T","github-url":"https://github.com/OPEN-NEXT/OKH-LOSH/issues/117#issuecomment-1016503571"},"message":"Proposal:\nEither call it \"Relative path or URL\", or make it just \"Relative path\".\nI imagine, it makes sense to have both. for example,\n`readme` should probably always be a \"Relative path\",\nwhile `image` might make sense as both, thus \"Relative path or URL\"?","files":null},{"type":3,"timestamp":1690627952,"nonce":"IwSiHll+7+/HYu3moL9lhySqtn0=","metadata":{"github-id":"IC_kwDOD3p2KM5iv0t8","github-url":"https://github.com/OPEN-NEXT/OKH-LOSH/issues/117#issuecomment-1656703868"},"message":"This has now been mostly incorporated into the docu.\nWe require all these fields to be \"Repo-/Project-Relative path or URL\", with the former no allowing `./`, `../` nor to begin with `/`.\n\nApparently OKH-LOSH was initiated with the idea of relative paths starting with `/` to be module relative, and those without `/` at the start to be part relative. This makes little to no sense, is not intuitive, introduces more possibilities for errors, and allows for parts to be non-modular, when they refer to files from the parent module.\n-\u003e Therefore, we (I) removed this module- and part-relative distinction/possibility.\n\nAll relative paths are now relative to the project/repo.\n\nIt is highly recommended that projects use repo-/project-relative paths over URLs.\nThis makes things more modular and easier to use correctly in a local setting.\n\nThe Krawler will try to provide relative-path, URL and frozen-URL for each referenced file,\nno matter which of the three was provided.","files":null}]}